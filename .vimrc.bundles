" Bundles {
    "if empty(glob('~/.vim/autoload/plug.vim'))
    "    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    "                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    "    autocmd VimEnter * PlugInstall | source $MYVIMRC
    "endif
    "" let g:plug_url_format='https://git::@hub.fastgit.org/%s.git'
    "" let g:plug_url_format='https://git::@hub.おうか.tw/%s.git'
    "" let g:plug_url_format='https://git::@hub.xn--gzu630h.xn--kpry57d/%s.git'
    let g:plug_url_format='https://git::@hub.nuaa.cf/%s.git'
    call plug#begin(g:plug_plugged)

    if count(g:gsvim_bundle_groups, 'ui') " UI setting
        "" Plug 'morhetz/gruvbox' " Colorscheme gruvbox
        Plug 'rakr/vim-one' " Colorscheme vim-one
        Plug 'itchyny/lightline.vim' " Status line
        Plug 'Yggdroot/indentLine' " Indentation level
    endif

    if count(g:gsvim_bundle_groups, 'enhance') " Vim enhancement
        Plug 'Raimondi/delimitMate' " Closing of quotes
        "" Plug 'terryma/vim-multiple-cursors' " Multiple cursors
        "" Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] } " Easy align
        "" Plug 'tpope/vim-commentary'
    endif

    if count(g:gsvim_bundle_groups, 'move') " Moving
        "" Plug 'Lokaltog/vim-easymotion' " Easy motion
    endif

    if count(g:gsvim_bundle_groups, 'navigate') " Navigation
        Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' } " NERD tree
        Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': 'NERDTreeToggle' } " NERD tree git plugin
    endif

    if count(g:gsvim_bundle_groups, 'complete') " Completion
        if g:gsvim_autocomplete=='NEO'
            if has('lua')
                let g:gsvim_completion_engine='neocomplete'
                Plug 'Shougo/neocomplete.vim' " Auto completion framework
            else
                let g:gsvim_completion_engine='neocomplcache'
                Plug 'Shougo/neocomplcache.vim' " Auto completion framework
            endif
            Plug 'Shougo/neosnippet.vim' " Snippet engine
            Plug 'Shougo/neosnippet-snippets' " Snippets
        elseif g:gsvim_autocomplete=='COC'
            Plug 'neoclide/coc.nvim', {'branch': 'release'}
        elseif g:gsvim_autocomplete=='YCM'
            " Auto completion framework
            let g:gsvim_completion_engine='YouCompleteMe'
            Plug 'Valloric/YouCompleteMe', { 'do': './install.py' } "Auto completion framework
            Plug 'honza/vim-snippets' " Snippets
            Plug 'sirver/ultisnips' " Snippet engine
        endif
    endif

    if count(g:gsvim_bundle_groups, 'compile') " Compiling
        "" Plug 'w0rp/ale'              " ale
    endif

    if count(g:gsvim_bundle_groups, 'vcs') 
        " Git
        "" Plug 'tpope/vim-fugitive' " Git wrapper
        "" Plug 'lambdalisue/gina.vim'  " Git wrapper asynchronously
        "" Plug 'gregsexton/gitv'    " gitk clone
        if has('signs')
            Plug 'airblade/vim-gitgutter' " Git diff sign
            " svn
            "" Plug 'mhinz/vim-signify'
        endif
    endif

    if count(g:gsvim_bundle_groups, 'language') " Language Specificity
        "" Plug 'davidhalter/jedi-vim', { 'for': 'python' } " Python jedi plugin
        "" Plug 'fatih/vim-go', { 'for': 'go' } " Golang
        "" Plug 'tpope/vim-rails', { 'for': [] } " Rails
        Plug 'mattn/emmet-vim', { 'for': ['html', 'css'] } " Emmet
        "" Plug 'LaTeX-Box-Team/LaTeX-Box' " LaTex
        "" Plug 'sheerun/vim-polyglot' " Language Support
        Plug 'pangloss/vim-javascript' " javascript
        Plug 'ap/vim-css-color'
        Plug 'elzr/vim-json'            " json
        "" Plug 'godlygeek/tabular'        " for vim-markdown
        "" Plug 'preservim/vim-markdown'   " markdown
        "" Plug 'iamcco/markdown-preview.vim'
        Plug 'ferrine/md-img-paste.vim' " markdown 插入图片
        "" Plug 'posva/vim-vue'    " vue
        " formate
        "" Plug 'editorconfig/editorconfig-vim'
        "" Plug 'chr4/nginx.vim'
        Plug 'chase/vim-ansible-yaml'
    endif


    call plug#end()

    syntax on
    syntax enable
" }

