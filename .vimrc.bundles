" Bundles {
    if empty(glob('~/.vim/autoload/plug.vim'))
        silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        autocmd VimEnter * PlugInstall | source $MYVIMRC
    endif

    call plug#begin('~/.vim/bundle')

    if count(g:gsvim_bundle_groups, 'ui') " UI setting
        " Plug 'kristijanhusak/vim-hybrid-material' " Colorscheme hybrid material
        Plug 'morhetz/gruvbox' " Colorscheme gruvbox
        " Plug 'jacoborus/tender.vim' " Colorscheme tender
        Plug 'vim-airline/vim-airline' | Plug 'vim-airline/vim-airline-themes' " Status line
        Plug 'Yggdroot/indentLine' " Indentation level
        " Plug 'ryanoasis/vim-devicons' " Devicons
        " Plug 'bling/vim-bufferline' " Buffer line
        " Plug 'mhinz/vim-startify' " Start page
        " Plug 'junegunn/goyo.vim', { 'for': 'markdown' } " Distraction-free
        " Plug 'junegunn/limelight.vim', { 'for': 'markdown' } " Hyperfocus-writing
    endif

    if count(g:gsvim_bundle_groups, 'enhance') " Vim enhancement
        Plug 'Raimondi/delimitMate' " Closing of quotes
        " Plug 'tomtom/tcomment_vim' " Commenter
        " Plug 'tpope/vim-abolish' " Abolish
        " Plug 'tpope/vim-speeddating' " Speed dating
        " Plug 'tpope/vim-repeat' " Repeat
        Plug 'terryma/vim-multiple-cursors' " Multiple cursors
        " Plug 'junegunn/vim-slash' " In-buffer search
        " Plug 'mbbill/undotree', { 'on': 'UndotreeToggle' } " Undo tree
        Plug 'tpope/vim-surround' " Surround
        Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] } " Easy align
        " Plug 'ludovicchabant/vim-gutentags' " Manage tag files
        " Plug 'AndrewRadev/splitjoin.vim' " Splitjoin
        " Plug 'sickill/vim-pasta' " Vim pasta
        " Plug 'Keithbsmiley/investigate.vim' " Helper
        " Plug 'wikitopian/hardmode' " Hard mode
        " Plug 'wellle/targets.vim' " Text objects
        " Plug 'roman/golden-ratio' " Resize windows
        " Plug 'chrisbra/vim-diff-enhanced' " Create better diffs
        Plug 'tpope/vim-commentary'
    endif

    if count(g:gsvim_bundle_groups, 'move') " Moving
        " Plug 'tpope/vim-unimpaired' " Pairs of mappings
        Plug 'Lokaltog/vim-easymotion' " Easy motion
        " Plug 'kepbod/quick-scope' " Quick scope
        " Plug 'yuttie/comfortable-motion.vim' " Comfortable motion
        " Plug 'bkad/CamelCaseMotion' " Camel case motion
        " Plug 'majutsushi/tagbar' " Tag bar
    endif

    if count(g:gsvim_bundle_groups, 'navigate') " Navigation
        Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' } " NERD tree
        Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': 'NERDTreeToggle' } " NERD tree git plugin
        " Plug 'mhinz/vim-tmuxify' " Tmux panes
    endif

    if count(g:gsvim_bundle_groups, 'complete') " Completion
        if g:gsvim_autocomplete=='NEO'
            if has('lua')
                let g:gsvim_completion_engine='neocomplete'
                Plug 'Shougo/neocomplete.vim' " Auto completion framework
            else
                let g:gsvim_completion_engine='neocomplcache'
                Plug 'Shougo/neocomplcache.vim' " Auto completion framework
            endif
            Plug 'Shougo/neosnippet.vim' " Snippet engine
            Plug 'Shougo/neosnippet-snippets' " Snippets
        else
            " Auto completion framework
            let g:gsvim_completion_engine='YouCompleteMe'
            Plug 'Valloric/YouCompleteMe', { 'do': './install.py' } "Auto completion framework
            Plug 'honza/vim-snippets' " Snippets
            Plug 'sirver/ultisnips' " Snippet engine
        endif
    endif

    if count(g:gsvim_bundle_groups, 'compile') " Compiling
        " Plug 'scrooloose/syntastic' " Syntax checking
        " Plug 'xuhdev/SingleCompile' " Single compile
        Plug 'w0rp/ale'              " ale
    endif

    if count(g:gsvim_bundle_groups, 'git') " Git
        Plug 'tpope/vim-fugitive' " Git wrapper
        " Plug 'junegunn/gv.vim' " Gitk clone
        Plug 'gregsexton/gitv'    " gitk clone
        if has('signs')
            Plug 'airblade/vim-gitgutter' " Git diff sign
        endif
    endif

    if count(g:gsvim_bundle_groups, 'svn') " Svn
        Plug 'mhinz/vim-signify'
    endif

    if count(g:gsvim_bundle_groups, 'language') " Language Specificity
        Plug 'davidhalter/jedi-vim', { 'for': 'python' } " Python jedi plugin
        Plug 'fatih/vim-go', { 'for': 'go' } " Golang
        " Plug 'tpope/vim-rails', { 'for': [] } " Rails
        Plug 'mattn/emmet-vim', { 'for': ['html', 'css'] } " Emmet
        " Plug 'LaTeX-Box-Team/LaTeX-Box' " LaTex
        " Plug 'sheerun/vim-polyglot' " Language Support
        Plug 'pangloss/vim-javascript' " javascript
        Plug 'elzr/vim-json'           " json
        Plug 'plasticboy/vim-markdown' " markdown
    endif

    call plug#end()

    syntax on
    syntax enable
" }

